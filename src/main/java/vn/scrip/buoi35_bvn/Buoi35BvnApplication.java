//M·ª•c ti√™u:
//T·∫°o ch∆∞∆°ng tr√¨nh m√¥ ph·ªèng t√†i kho·∫£n ng√¢n h√†ng. N·∫øu ng∆∞·ªùi d√πng r√∫t ti·ªÅn v∆∞·ª£t qu√° s·ªë d∆∞, ch∆∞∆°ng tr√¨nh n√©m ra m·ªôt ngo·∫°i l·ªá InsufficientFundsException do b·∫°n t·ª± ƒë·ªãnh nghƒ©a.
//
//Y√™u c·∫ßu:
//T·∫°o l·ªõp BankAccount c√≥:
//Thu·ªôc t√≠nh: balance

//Ph∆∞∆°ng th·ª©c: deposit(double amount), withdraw(double amount)
//N·∫øu r√∫t v∆∞·ª£t s·ªë d∆∞, n√©m ra InsufficientFundsException
//
//Vi·∫øt ch∆∞∆°ng tr√¨nh ch√≠nh m√¥ ph·ªèng 2 tr∆∞·ªùng h·ª£p:
//Giao d·ªãch th√†nh c√¥ng
//Giao d·ªãch th·∫•t b·∫°i (s·ªë d∆∞ kh√¥ng ƒë·ªß)
//
//G·ª£i √Ω code:
//

//T·∫°o class ngo·∫°i l·ªá t·ª± ƒë·ªãnh nghƒ©a
//public class InsufficientFundsException extends Exception {
//    public InsufficientFundsException(String message) {
//        super(message);
//    }
//}
//T·∫°o class BankAccount
//public class BankAccount {
//    private double balance;
//
//    public BankAccount(double initialBalance) {
//        this.balance = initialBalance;
//    }
//    public void deposit(double amount) {
//        balance += amount;
//        System.out.println("N·∫°p ti·ªÅn th√†nh c√¥ng: " + amount);
//    }
//    public void withdraw(double amount) throws InsufficientFundsException {
//        if (amount > balance)
//        {
//            throw new InsufficientFundsException("S·ªë d∆∞ kh√¥ng ƒë·ªß ƒë·ªÉ r√∫t: " + amount);
//        }
//        balance -= amount;
//        System.out.println("R√∫t ti·ªÅn th√†nh c√¥ng: " + amount);
//    }
//
//    public double getBalance() {
//        return balance;
//    }
//}
//
//L∆∞u √Ω: C√≥ th·ªÉ c√°c lo·∫°i c√¥ng c·ª• AI h·ªó tr·ª£.
package vn.scrip.buoi35_bvn;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
@SpringBootApplication
public class Buoi35BvnApplication
{
	public static void main(String[] args)
	{
		BankAccount account = new BankAccount(1_000_000); // 1 tri·ªáu ƒë·ªìng
		System.out.println("üí∞ S·ªë d∆∞ ban ƒë·∫ßu: " + account.getBalance() + " VND");
		try {
			// Giao d·ªãch 1: th√†nh c√¥ng
			account.withdraw(500_000);
			System.out.println("üëâ S·ªë d∆∞ c√≤n l·∫°i: " + account.getBalance() + " VND");
			// Giao d·ªãch 2: th·∫•t b·∫°i (s·ªë d∆∞ kh√¥ng ƒë·ªß)
			account.withdraw(600_000); // ch·ªâ c√≤n 500k, r√∫t 600k s·∫Ω l·ªói
		}













		catch (InsufficientFundsException e) {
			System.err.println(e.getMessage());
		}
		System.out.println("üè¶ K·∫øt th√∫c giao d·ªãch, s·ªë d∆∞: " + account.getBalance() + " VND");
	}
}



